{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/showme/Sites/zendaback/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/showme/Sites/zendaback\",\"filename\":\"/Users/showme/Sites/zendaback/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/showme/Sites/zendaback\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/showme/Sites/zendaback/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/showme/Sites/zendaback",
      "filename": "/Users/showme/Sites/zendaback/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/showme/Sites/zendaback",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/showme/Sites/zendaback/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/showme/Sites/zendaback/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/showme/Sites/zendaback/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const http = require('http');\n\nconst express = require('express');\n\nconst cors = require('cors');\n\nconst Openpay = require('openpay');\n\nconst openpay = new Openpay('mzzqfji4nm9zkiwtreck', 'sk_6f4732d63b6945c6a5bdcc4c4f1b062b'); // Inicio de servidor \n\nvar app = express(); //const server = http.createServer(app);\n// ConfiguraciÃ³n de la app\n\napp.use(express.json());\napp.use(cors()); // Rutas\n\napp.post('/api/login', cors(), async (req, res) => {\n  const {\n    user,\n    password\n  } = req.body;\n\n  if (user === 'admin' && password === 'admin') {\n    res.status(200).send(true);\n  } else {\n    res.status(400).send(false);\n  }\n});\napp.post('/api/user', cors(), async (req, res) => {\n  const {\n    name,\n    email,\n    last_name,\n    city,\n    state,\n    address,\n    postal_code,\n    phone_number\n  } = req.body;\n  const newCustomer = {\n    name,\n    email,\n    last_name,\n    address: {\n      city,\n      state,\n      line1: address,\n      line2: \"\",\n      postal_code,\n      country_code: \"MX\"\n    },\n    phone_number\n  };\n  openpay.customers.create(newCustomer, function (error, body) {\n    console.log(error); // null if no error occurred (status code != 200||201||204)\n\n    console.log(body); // contains the object returned if no error occurred (status code == 200||201||204)\n\n    if (error) {\n      res.status(400).send({\n        error,\n        body\n      });\n    } else {\n      res.status(200).send(body);\n    }\n  });\n});\napp.get('/api/users', cors(), async (req, res) => {\n  openpay.customers.list({}, function (error, list) {\n    if (error) {\n      res.status(400).send({\n        error,\n        list\n      });\n    } else {\n      res.status(200).send(list);\n    }\n  });\n}); //server.listen(PORT, () => console.log(`app corriendo en el puerto ${PORT}`));\n\nconst PORT = process.env.PORT || 4000;\napp.listen(PORT, function () {\n  console.log(\"servidor OK\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImh0dHAiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImNvcnMiLCJPcGVucGF5Iiwib3BlbnBheSIsImFwcCIsInVzZSIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwidXNlciIsInBhc3N3b3JkIiwiYm9keSIsInN0YXR1cyIsInNlbmQiLCJuYW1lIiwiZW1haWwiLCJsYXN0X25hbWUiLCJjaXR5Iiwic3RhdGUiLCJhZGRyZXNzIiwicG9zdGFsX2NvZGUiLCJwaG9uZV9udW1iZXIiLCJuZXdDdXN0b21lciIsImxpbmUxIiwibGluZTIiLCJjb3VudHJ5X2NvZGUiLCJjdXN0b21lcnMiLCJjcmVhdGUiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJsaXN0IiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1HLE9BQU8sR0FBR0gsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUksT0FBTyxHQUFHLElBQUlELE9BQUosQ0FBWSxzQkFBWixFQUFvQyxxQ0FBcEMsQ0FBaEIsQyxDQUNBOztBQUNBLElBQUlFLEdBQUcsR0FBR0osT0FBTyxFQUFqQixDLENBQ0E7QUFDQTs7QUFDQUksR0FBRyxDQUFDQyxHQUFKLENBQVFMLE9BQU8sQ0FBQ00sSUFBUixFQUFSO0FBQ0FGLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSixJQUFJLEVBQVosRSxDQUNBOztBQUNBRyxHQUFHLENBQUNHLElBQUosQ0FBUyxZQUFULEVBQXVCTixJQUFJLEVBQTNCLEVBQStCLE9BQU9PLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUMvQyxRQUFNO0FBQUVDLElBQUFB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L1VzZXJzL3Nob3dtZS9TaXRlcy96ZW5kYWJhY2svIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuY29uc3QgT3BlbnBheSA9IHJlcXVpcmUoJ29wZW5wYXknKTtcbmNvbnN0IG9wZW5wYXkgPSBuZXcgT3BlbnBheSgnbXp6cWZqaTRubTl6a2l3dHJlY2snLCAnc2tfNmY0NzMyZDYzYjY5NDVjNmE1YmRjYzRjNGYxYjA2MmInKTtcbi8vIEluaWNpbyBkZSBzZXJ2aWRvciBcbnZhciBhcHAgPSBleHByZXNzKCk7XG4vL2NvbnN0IHNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGFwcCk7XG4vLyBDb25maWd1cmFjacOzbiBkZSBsYSBhcHBcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShjb3JzKCkpO1xuLy8gUnV0YXNcbmFwcC5wb3N0KCcvYXBpL2xvZ2luJywgY29ycygpLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHVzZXIsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcbiAgICBpZih1c2VyID09PSAnYWRtaW4nICYmIHBhc3N3b3JkID09PSAnYWRtaW4nKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHRydWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKGZhbHNlKTtcbiAgICB9XG59KTtcbmFwcC5wb3N0KCcvYXBpL3VzZXInLCBjb3JzKCksIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgbmFtZSwgZW1haWwsIGxhc3RfbmFtZSwgY2l0eSwgc3RhdGUsIGFkZHJlc3MsIHBvc3RhbF9jb2RlLCBwaG9uZV9udW1iZXIgIH0gPSByZXEuYm9keTtcbiAgICBjb25zdCBuZXdDdXN0b21lciA9IHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZW1haWwsXG4gICAgICAgIGxhc3RfbmFtZSxcbiAgICAgICAgYWRkcmVzczp7XG4gICAgICAgICAgY2l0eSxcbiAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICBsaW5lMTphZGRyZXNzLFxuICAgICAgICAgIGxpbmUyOlwiXCIsXG4gICAgICAgICAgcG9zdGFsX2NvZGUsXG4gICAgICAgICAgY291bnRyeV9jb2RlOlwiTVhcIlxuICAgICAgICB9LFxuICAgICAgICBwaG9uZV9udW1iZXJcbiAgICAgIH07ICAgICAgIFxuICAgICAgb3BlbnBheS5jdXN0b21lcnMuY3JlYXRlKG5ld0N1c3RvbWVyLCBmdW5jdGlvbihlcnJvciwgYm9keSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsgICAgLy8gbnVsbCBpZiBubyBlcnJvciBvY2N1cnJlZCAoc3RhdHVzIGNvZGUgIT0gMjAwfHwyMDF8fDIwNClcbiAgICAgICAgICBjb25zb2xlLmxvZyhib2R5KTsgICAgIC8vIGNvbnRhaW5zIHRoZSBvYmplY3QgcmV0dXJuZWQgaWYgbm8gZXJyb3Igb2NjdXJyZWQgKHN0YXR1cyBjb2RlID09IDIwMHx8MjAxfHwyMDQpXG4gICAgICAgICAgaWYoZXJyb3Ipe1xuICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZCh7ZXJyb3IsIGJvZHl9KVxuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoYm9keSk7XG4gICAgICAgICAgfVxuICAgICAgfSk7XG59KTtcbmFwcC5nZXQoJy9hcGkvdXNlcnMnLCBjb3JzKCksIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgICAgb3BlbnBheS5jdXN0b21lcnMubGlzdCh7fSwgZnVuY3Rpb24oZXJyb3IsIGxpc3QpIHtcbiAgICAgICAgaWYoZXJyb3Ipe1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoe2Vycm9yLCBsaXN0fSlcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKGxpc3QpO1xuICAgICAgICB9XG4gICAgICB9KTtcbn0pO1xuLy9zZXJ2ZXIubGlzdGVuKFBPUlQsICgpID0+IGNvbnNvbGUubG9nKGBhcHAgY29ycmllbmRvIGVuIGVsIHB1ZXJ0byAke1BPUlR9YCkpO1xuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNDAwMDtcbmFwcC5saXN0ZW4oUE9SVCwgZnVuY3Rpb24oKXtcbiAgICBjb25zb2xlLmxvZyhcInNlcnZpZG9yIE9LXCIpO1xufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "http",
        "require",
        "express",
        "cors",
        "Openpay",
        "openpay",
        "app",
        "use",
        "json",
        "post",
        "req",
        "res",
        "user",
        "password",
        "body",
        "status",
        "send",
        "name",
        "email",
        "last_name",
        "city",
        "state",
        "address",
        "postal_code",
        "phone_number",
        "newCustomer",
        "line1",
        "line2",
        "country_code",
        "customers",
        "create",
        "error",
        "console",
        "log",
        "get",
        "list",
        "PORT",
        "process",
        "env",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/showme/Sites/zendaback/",
      "sourcesContent": [
        "const http = require('http');\nconst express = require('express');\nconst cors = require('cors');\nconst Openpay = require('openpay');\nconst openpay = new Openpay('mzzqfji4nm9zkiwtreck', 'sk_6f4732d63b6945c6a5bdcc4c4f1b062b');\n// Inicio de servidor \nvar app = express();\n//const server = http.createServer(app);\n// ConfiguraciÃ³n de la app\napp.use(express.json());\napp.use(cors());\n// Rutas\napp.post('/api/login', cors(), async (req, res) => {\n    const { user, password } = req.body;\n    if(user === 'admin' && password === 'admin') {\n        res.status(200).send(true);\n    } else {\n        res.status(400).send(false);\n    }\n});\napp.post('/api/user', cors(), async (req, res) => {\n    const { name, email, last_name, city, state, address, postal_code, phone_number  } = req.body;\n    const newCustomer = {\n        name,\n        email,\n        last_name,\n        address:{\n          city,\n          state,\n          line1:address,\n          line2:\"\",\n          postal_code,\n          country_code:\"MX\"\n        },\n        phone_number\n      };       \n      openpay.customers.create(newCustomer, function(error, body) {\n          console.log(error);    // null if no error occurred (status code != 200||201||204)\n          console.log(body);     // contains the object returned if no error occurred (status code == 200||201||204)\n          if(error){\n              res.status(400).send({error, body})\n          }\n          else {\n              res.status(200).send(body);\n          }\n      });\n});\napp.get('/api/users', cors(), async (req, res) => {\n      openpay.customers.list({}, function(error, list) {\n        if(error){\n            res.status(400).send({error, list})\n        }\n        else {\n            res.status(200).send(list);\n        }\n      });\n});\n//server.listen(PORT, () => console.log(`app corriendo en el puerto ${PORT}`));\nconst PORT = process.env.PORT || 4000;\napp.listen(PORT, function(){\n    console.log(\"servidor OK\");\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1618445623175
  }
}