{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/showme/Sites/zendaback/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/showme/Sites/zendaback\",\"filename\":\"/Users/showme/Sites/zendaback/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/showme/Sites/zendaback\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/showme/Sites/zendaback/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/showme/Sites/zendaback",
      "filename": "/Users/showme/Sites/zendaback/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/showme/Sites/zendaback",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/showme/Sites/zendaback/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/showme/Sites/zendaback/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/showme/Sites/zendaback/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const http = require('http');\n\nconst express = require('express');\n\nconst cors = require('cors');\n\nconst Openpay = require('openpay');\n\nconst openpay = new Openpay('mzzqfji4nm9zkiwtreck', 'sk_6f4732d63b6945c6a5bdcc4c4f1b062b'); // Inicio de servidor\n\nvar app = express(); //const server = http.createServer(app);\n// ConfiguraciÃ³n de la app\n\napp.use(express.json());\napp.use(cors()); // Rutas\n\napp.post('/api/login', cors(), async (req, res) => {\n  const {\n    user,\n    password\n  } = req.body;\n\n  if (user === 'admin' && password === 'admin') {\n    res.status(200).send(true);\n  } else {\n    res.status(400).send(false);\n  }\n});\napp.post('/api/user', cors(), async (req, res) => {\n  const {\n    name,\n    email,\n    last_name,\n    city,\n    state,\n    address,\n    postal_code,\n    phone_number\n  } = req.body;\n  const newCustomer = {\n    name,\n    email,\n    last_name,\n    address: {\n      city,\n      state,\n      line1: address,\n      line2: \"\",\n      postal_code,\n      country_code: \"MX\"\n    },\n    phone_number\n  };\n  openpay.customers.create(newCustomer, function (error, body) {\n    console.log(error); // null if no error occurred (status code != 200||201||204)\n\n    console.log(body); // contains the object returned if no error occurred (status code == 200||201||204)\n\n    if (error) {\n      res.status(400).send({\n        error,\n        body\n      });\n    } else {\n      res.status(200).send(body);\n    }\n  });\n});\napp.get('/api/users', cors(), async (req, res) => {\n  openpay.customers.list({}, function (error, list) {\n    if (error) {\n      res.status(400).send({\n        error,\n        list\n      });\n    } else {\n      res.status(200).send(list);\n    }\n  });\n}); //server.listen(PORT, () => console.log(`app corriendo en el puerto ${PORT}`));\n\nconst puerto = 3000;\napp.listen(puerto, function () {\n  console.log(\"servidor OK\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImh0dHAiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImNvcnMiLCJPcGVucGF5Iiwib3BlbnBheSIsImFwcCIsInVzZSIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwidXNlciIsInBhc3N3b3JkIiwiYm9keSIsInN0YXR1cyIsInNlbmQiLCJuYW1lIiwiZW1haWwiLCJsYXN0X25hbWUiLCJjaXR5Iiwic3RhdGUiLCJhZGRyZXNzIiwicG9zdGFsX2NvZGUiLCJwaG9uZV9udW1iZXIiLCJuZXdDdXN0b21lciIsImxpbmUxIiwibGluZTIiLCJjb3VudHJ5X2NvZGUiLCJjdXN0b21lcnMiLCJjcmVhdGUiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJsaXN0IiwicHVlcnRvIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1JLE9BQU8sR0FBRyxJQUFJRCxPQUFKLENBQVksc0JBQVosRUFBb0MscUNBQXBDLENBQWhCLEMsQ0FDQTs7QUFDQSxJQUFJRSxHQUFHLEdBQUdKLE9BQU8sRUFBakIsQyxDQUNBO0FBQ0E7O0FBQ0FJLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTCxPQUFPLENBQUNNLElBQVIsRUFBUjtBQUNBRixHQUFHLENBQUNDLEdBQUosQ0FBUUosSUFBSSxFQUFaLEUsQ0FDQTs7QUFDQUcsR0FBRyxDQUFDRyxJQUFKLENBQVMsWUFBVCxFQUF1Qk4sSUFBSSxFQUEzQixFQUErQixPQUFPTyxHQUFQLEVBQVlDLEdBQVosS0FBb0I7QUFDL0MsUUFBTTtBQUFFQyxJQUFBQSxJQUFGO0FBQVFDLElB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WyJjb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XG5jb25zdCBPcGVucGF5ID0gcmVxdWlyZSgnb3BlbnBheScpO1xuY29uc3Qgb3BlbnBheSA9IG5ldyBPcGVucGF5KCdtenpxZmppNG5tOXpraXd0cmVjaycsICdza182ZjQ3MzJkNjNiNjk0NWM2YTViZGNjNGM0ZjFiMDYyYicpO1xuLy8gSW5pY2lvIGRlIHNlcnZpZG9yXG52YXIgYXBwID0gZXhwcmVzcygpO1xuLy9jb25zdCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihhcHApO1xuLy8gQ29uZmlndXJhY2nDs24gZGUgbGEgYXBwXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoY29ycygpKTtcbi8vIFJ1dGFzXG5hcHAucG9zdCgnL2FwaS9sb2dpbicsIGNvcnMoKSwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyB1c2VyLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG4gICAgaWYodXNlciA9PT0gJ2FkbWluJyAmJiBwYXNzd29yZCA9PT0gJ2FkbWluJykge1xuICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCh0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZChmYWxzZSk7XG4gICAgfVxufSk7XG5hcHAucG9zdCgnL2FwaS91c2VyJywgY29ycygpLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IG5hbWUsIGVtYWlsLCBsYXN0X25hbWUsIGNpdHksIHN0YXRlLCBhZGRyZXNzLCBwb3N0YWxfY29kZSwgcGhvbmVfbnVtYmVyICB9ID0gcmVxLmJvZHk7XG4gICAgY29uc3QgbmV3Q3VzdG9tZXIgPSB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGVtYWlsLFxuICAgICAgICBsYXN0X25hbWUsXG4gICAgICAgIGFkZHJlc3M6e1xuICAgICAgICAgIGNpdHksXG4gICAgICAgICAgc3RhdGUsXG4gICAgICAgICAgbGluZTE6YWRkcmVzcyxcbiAgICAgICAgICBsaW5lMjpcIlwiLFxuICAgICAgICAgIHBvc3RhbF9jb2RlLFxuICAgICAgICAgIGNvdW50cnlfY29kZTpcIk1YXCJcbiAgICAgICAgfSxcbiAgICAgICAgcGhvbmVfbnVtYmVyXG4gICAgICB9OyAgICAgICBcbiAgICAgIG9wZW5wYXkuY3VzdG9tZXJzLmNyZWF0ZShuZXdDdXN0b21lciwgZnVuY3Rpb24oZXJyb3IsIGJvZHkpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7ICAgIC8vIG51bGwgaWYgbm8gZXJyb3Igb2NjdXJyZWQgKHN0YXR1cyBjb2RlICE9IDIwMHx8MjAxfHwyMDQpXG4gICAgICAgICAgY29uc29sZS5sb2coYm9keSk7ICAgICAvLyBjb250YWlucyB0aGUgb2JqZWN0IHJldHVybmVkIGlmIG5vIGVycm9yIG9jY3VycmVkIChzdGF0dXMgY29kZSA9PSAyMDB8fDIwMXx8MjA0KVxuICAgICAgICAgIGlmKGVycm9yKXtcbiAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoe2Vycm9yLCBib2R5fSlcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKGJvZHkpO1xuICAgICAgICAgIH1cbiAgICAgIH0pO1xufSk7XG5hcHAuZ2V0KCcvYXBpL3VzZXJzJywgY29ycygpLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICAgIG9wZW5wYXkuY3VzdG9tZXJzLmxpc3Qoe30sIGZ1bmN0aW9uKGVycm9yLCBsaXN0KSB7XG4gICAgICAgIGlmKGVycm9yKXtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtlcnJvciwgbGlzdH0pXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChsaXN0KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG59KTtcbi8vc2VydmVyLmxpc3RlbihQT1JULCAoKSA9PiBjb25zb2xlLmxvZyhgYXBwIGNvcnJpZW5kbyBlbiBlbCBwdWVydG8gJHtQT1JUfWApKTtcbmNvbnN0IHB1ZXJ0byA9IDMwMDA7XG5hcHAubGlzdGVuKHB1ZXJ0bywgZnVuY3Rpb24oKXtcbiAgICBjb25zb2xlLmxvZyhcInNlcnZpZG9yIE9LXCIpO1xufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "http",
        "require",
        "express",
        "cors",
        "Openpay",
        "openpay",
        "app",
        "use",
        "json",
        "post",
        "req",
        "res",
        "user",
        "password",
        "body",
        "status",
        "send",
        "name",
        "email",
        "last_name",
        "city",
        "state",
        "address",
        "postal_code",
        "phone_number",
        "newCustomer",
        "line1",
        "line2",
        "country_code",
        "customers",
        "create",
        "error",
        "console",
        "log",
        "get",
        "list",
        "puerto",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/showme/Sites/zendaback/",
      "sourcesContent": [
        "const http = require('http');\nconst express = require('express');\nconst cors = require('cors');\nconst Openpay = require('openpay');\nconst openpay = new Openpay('mzzqfji4nm9zkiwtreck', 'sk_6f4732d63b6945c6a5bdcc4c4f1b062b');\n// Inicio de servidor\nvar app = express();\n//const server = http.createServer(app);\n// ConfiguraciÃ³n de la app\napp.use(express.json());\napp.use(cors());\n// Rutas\napp.post('/api/login', cors(), async (req, res) => {\n    const { user, password } = req.body;\n    if(user === 'admin' && password === 'admin') {\n        res.status(200).send(true);\n    } else {\n        res.status(400).send(false);\n    }\n});\napp.post('/api/user', cors(), async (req, res) => {\n    const { name, email, last_name, city, state, address, postal_code, phone_number  } = req.body;\n    const newCustomer = {\n        name,\n        email,\n        last_name,\n        address:{\n          city,\n          state,\n          line1:address,\n          line2:\"\",\n          postal_code,\n          country_code:\"MX\"\n        },\n        phone_number\n      };       \n      openpay.customers.create(newCustomer, function(error, body) {\n          console.log(error);    // null if no error occurred (status code != 200||201||204)\n          console.log(body);     // contains the object returned if no error occurred (status code == 200||201||204)\n          if(error){\n              res.status(400).send({error, body})\n          }\n          else {\n              res.status(200).send(body);\n          }\n      });\n});\napp.get('/api/users', cors(), async (req, res) => {\n      openpay.customers.list({}, function(error, list) {\n        if(error){\n            res.status(400).send({error, list})\n        }\n        else {\n            res.status(200).send(list);\n        }\n      });\n});\n//server.listen(PORT, () => console.log(`app corriendo en el puerto ${PORT}`));\nconst puerto = 3000;\napp.listen(puerto, function(){\n    console.log(\"servidor OK\");\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1618429837099
  }
}